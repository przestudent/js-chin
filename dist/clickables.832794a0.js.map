{"version":3,"sources":["src/js/initialiser.ts","src/js/clickables.ts"],"names":[],"mappings":"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","file":"clickables.832794a0.js","sourceRoot":"..","sourcesContent":["export class SquareInsides {\r\n  public colors: possibleColors | '';\r\n  public elements: number;\r\n  public powerUp: null;\r\n  constructor() {\r\n    this.colors = '';\r\n    this.elements = 0;\r\n    this.powerUp = null;\r\n  }\r\n  addPawn(color: possibleColors) {\r\n    this.elements++;\r\n    this.colors = color;\r\n  }\r\n  removePawn(idx: number) {\r\n    // RemoveChildFromAnElement(playableSquares[idx])\r\n    // * TODO: CONSIDER PUTTING IT HERE\r\n    if (this.elements) {\r\n      this.elements--;\r\n    }\r\n    if (this.elements <= 0) {\r\n      this.colors = '';\r\n    }\r\n  }\r\n}\r\nconst dices = document.querySelectorAll<HTMLElement>('.dice-throw>i');\r\ndices[0].style.visibility = 'visible';\r\n\r\nexport function TurnOnDice(i: number) {\r\n  dices.forEach((e) => {\r\n    e.style.visibility = 'hidden';\r\n  });\r\n  dices[i - 1].style.visibility = 'visible';\r\n}\r\n\r\nfunction WinLaneConstructor(color: possibleColors): Element[] {\r\n  const arr = Array.from(\r\n    document.querySelectorAll<HTMLDivElement>(`[data-win${color}]`)\r\n  );\r\n  arr.sort((a, b) => {\r\n    return (\r\n      parseInt(a['dataset'][`win${color}`] as string) -\r\n      parseInt(b['dataset'][`win${color}`] as string)\r\n    );\r\n  });\r\n  return arr;\r\n}\r\n\r\nexport function ColorWinLane() {\r\n  return {\r\n    red: WinLaneConstructor('red'),\r\n    blue: WinLaneConstructor('blue'),\r\n    green: WinLaneConstructor('green'),\r\n    yellow: WinLaneConstructor('yellow'),\r\n  };\r\n}\r\n\r\nlet moveCount = 0;\r\n\r\nconst boardHistory = document.querySelector<HTMLElement>(\r\n  '.board-history-table>tbody'\r\n) as HTMLElement;\r\nexport function AppendBoardHistory(color: possibleColors, diceThrow: number) {\r\n  moveCount++;\r\n  const tableRowFragment = document.createDocumentFragment();\r\n  const tableRow = document.createElement('tr');\r\n  const tableItem1 = document.createElement('td');\r\n  const tableItem2 = document.createElement('td');\r\n  const tableItem3 = document.createElement('td');\r\n\r\n  tableItem1.innerText = moveCount.toString();\r\n  tableItem2.style.setProperty('--player-color', color);\r\n  tableItem2.innerText = color;\r\n  tableItem3.innerText = diceThrow.toString();\r\n  if (diceThrow === 6) {\r\n    tableItem3.classList.add('thrown-six');\r\n  }\r\n\r\n  tableRow.append(tableItem1, tableItem2, tableItem3);\r\n  tableRowFragment.appendChild(tableRow);\r\n  // tableRowFragment.innerHTML = `<td>${moveCount}</td><td style=\"--player-color:${color}\">${color}</td><td>${diceThrow}</td>`;\r\n  if (!boardHistory.children.length) {\r\n    boardHistory.appendChild(tableRowFragment);\r\n  } else {\r\n    boardHistory.insertBefore(tableRowFragment, boardHistory.children[0]);\r\n  }\r\n}\r\nexport function ClearBoardHistory() {\r\n  boardHistory.innerHTML = '';\r\n  moveCount = 0;\r\n}\r\nexport function RemoveMyListeners(element: Element) {\r\n  element.parentElement?.replaceChild(element.cloneNode(true), element);\r\n}\r\n\r\nexport function RemovePawnListeners(colors: possibleColors[]) {\r\n  for (const color of colors) {\r\n    const pawnOfColor = Array.from(\r\n      document.querySelectorAll(`[data-pawn=${color}]`)\r\n    );\r\n    pawnOfColor.forEach((e) => {\r\n      RemoveMyListeners(e);\r\n    });\r\n  }\r\n}\r\n","import {\r\n  SquareInsides,\r\n  ColorWinLane,\r\n  AppendBoardHistory,\r\n  TurnOnDice,\r\n  ClearBoardHistory,\r\n  RemoveMyListeners,\r\n  RemovePawnListeners,\r\n} from './initialiser';\r\n\r\ndocument.querySelector<HTMLDialogElement>('#tutorial')?.showModal();\r\nconst colors: possibleColors[] = ['red', 'blue', 'green', 'yellow'];\r\n\r\nconst roadToWin = 39;\r\n\r\nconst colorOrder: {\r\n  red: 'blue';\r\n  blue: 'green';\r\n  green: 'yellow';\r\n  yellow: 'red';\r\n} = {\r\n  red: 'blue',\r\n  blue: 'green',\r\n  green: 'yellow',\r\n  yellow: 'red',\r\n};\r\nconst initDiceThrow = 6;\r\nlet diceThrow = initDiceThrow;\r\nconst initColor = 'red';\r\nlet playerColor: possibleColors = initColor;\r\n\r\n// #region\r\n\r\nconst playableSquares = Array.from(\r\n  document.querySelectorAll<HTMLDivElement>('.square[data-index]')\r\n).sort((a, b) => {\r\n  return (\r\n    parseInt(a.dataset.index as string) - parseInt(b.dataset.index as string)\r\n  );\r\n});\r\n\r\nconst playerColorShow = document.querySelector('.player') as HTMLDivElement;\r\nconst colorWinLane = ColorWinLane();\r\n\r\nconst colorEnd: { [color in possibleColors]: string } = {\r\n  red: (document.querySelector('[data-end=red]') as HTMLDivElement).dataset\r\n    .index as string,\r\n  blue: (document.querySelector('[data-end=blue]') as HTMLDivElement).dataset\r\n    .index as string,\r\n  yellow: (document.querySelector('[data-end=yellow]') as HTMLDivElement)\r\n    .dataset.index as string,\r\n  green: (document.querySelector('[data-end=green]') as HTMLDivElement).dataset\r\n    .index as string,\r\n};\r\nconst colorStart: { [color in possibleColors]: string } = {\r\n  red: (document.querySelector('.red-light') as HTMLDivElement).dataset\r\n    .index as string,\r\n  blue: (document.querySelector('.blue-light') as HTMLDivElement).dataset\r\n    .index as string,\r\n  yellow: (document.querySelector('.yellow-light') as HTMLDivElement).dataset\r\n    .index as string,\r\n  green: (document.querySelector('.green-light') as HTMLDivElement).dataset\r\n    .index as string,\r\n};\r\nconst colorPawnsSpawn: { [color in possibleColors]: HTMLElement } = {\r\n  red: document.querySelector('#pawns-red') as HTMLElement,\r\n  blue: document.querySelector('#pawns-blue') as HTMLElement,\r\n  yellow: document.querySelector('#pawns-yellow') as HTMLElement,\r\n  green: document.querySelector('#pawns-green') as HTMLElement,\r\n};\r\nconst colorFinishedPawns = {\r\n  red: document.querySelector('.finished-pawns-red') as HTMLDivElement,\r\n  green: document.querySelector('.finished-pawns-green') as HTMLDivElement,\r\n  blue: document.querySelector('.finished-pawns-blue') as HTMLDivElement,\r\n  yellow: document.querySelector('.finished-pawns-yellow') as HTMLDivElement,\r\n};\r\nconst placePawn = document.querySelector('.place-pawn') as HTMLButtonElement;\r\nconst gameInfo = document.querySelector('#game-info') as HTMLDivElement;\r\n\r\nconst buttonRestart = document.querySelector(\r\n  '.button-restart'\r\n) as HTMLButtonElement;\r\nbuttonRestart.addEventListener('click', KillAllPawns);\r\n\r\nconst dice = document.querySelector('.dice') as HTMLButtonElement;\r\nconst diceText = document.querySelector('.dice-before-text') as HTMLDivElement;\r\n\r\nlet diceReady = true;\r\nlet pickPawn = false;\r\n// #endregion\r\nfunction TogglePawnAndDice() {\r\n  diceReady = !diceReady;\r\n  pickPawn = !pickPawn;\r\n  if (diceReady) {\r\n    diceText.innerText = 'Ready';\r\n  } else {\r\n    diceText.innerText = 'Not Ready';\r\n  }\r\n  if (diceReady) {\r\n    dice.focus();\r\n  }\r\n}\r\nfunction NextIdx(currIdx: number) {\r\n  return (currIdx + diceThrow) % playableSquares.length;\r\n}\r\nfunction CheckAndHandleWin(color: possibleColors) {\r\n  if (colorFinishedPawns[color]?.childElementCount === 1) {\r\n    console.log('WIN');\r\n    console.log('hello text chabge mayve ti bot ready?????');\r\n    diceText.innerText = 'Not Ready';\r\n    dice.removeEventListener('click', DiceClick);\r\n    document.querySelector<HTMLDialogElement>('#win-modal')?.showModal();\r\n    RemovePawnListeners(colors);\r\n    buttonRestart.focus();\r\n    diceReady = false;\r\n    pickPawn = false;\r\n  }\r\n}\r\nfunction PawnHandler(color_: possibleColors) {\r\n  return function HOHandler(this: HTMLElement) {\r\n    // * Check if we can move the pawn\r\n    if (playerColor == color_ && pickPawn) {\r\n      const dataSetIndex = (this.parentElement as HTMLElement).dataset[\r\n        `win${color_}`\r\n      ];\r\n      // * Check if we are on the lane and if we win\r\n      if (diceThrow !== 6) {\r\n        playerColor = colorOrder[color_];\r\n      }\r\n      if (dataSetIndex !== undefined) {\r\n        if (this.parentElement) {\r\n          const removedPawn = this.parentElement.removeChild(this);\r\n          console.log('we are on lane ');\r\n          if (parseInt(dataSetIndex) + diceThrow > 3) {\r\n            console.log('we finish');\r\n            this.removeEventListener('click', HOHandler);\r\n            colorFinishedPawns[color_]?.appendChild(removedPawn);\r\n            CheckAndHandleWin(color_);\r\n          } else {\r\n            console.log('we move on the lane');\r\n            colorWinLane[color_][\r\n              parseInt(dataSetIndex) + diceThrow\r\n            ].appendChild(removedPawn);\r\n          }\r\n        }\r\n\r\n        TogglePawnAndDice();\r\n        return;\r\n      }\r\n      // * We are not on lane\r\n      console.log('we are not on lane');\r\n      const idx = parseInt(\r\n        (this.parentElement as HTMLElement).dataset.index as string\r\n      );\r\n      const nextIdx = NextIdx(idx);\r\n      if (SwitchToLane(idx, nextIdx, color_)) {\r\n        console.log('yup switching to lane');\r\n        BoardCleanUp(idx, idx, color_, this, true);\r\n        TogglePawnAndDice();\r\n        return;\r\n      }\r\n      // * we are on the board\r\n      if (BoardCleanUp(idx, nextIdx, color_, this)) {\r\n        return;\r\n      } else {\r\n        TogglePawnAndDice();\r\n      }\r\n    }\r\n  };\r\n  // ! TODO: ADD HISTORY APPEND\r\n}\r\nfunction BoardCleanUp(\r\n  currIdx: number,\r\n  nextIdx = currIdx,\r\n  color: possibleColors,\r\n  pawnElement: Element,\r\n  winLane = false\r\n) {\r\n  console.log('yup we are on boardcleanup for tha pawn');\r\n  if (winLane) {\r\n    console.log('boardclean up for element on winlane');\r\n    const parentSquare = pawnElement.parentElement as Element;\r\n    const steps =\r\n      (currIdx - parseInt(colorEnd[color]) + diceThrow - 1) %\r\n      playableSquares.length;\r\n    if (steps >= 4) {\r\n      console.log('we gp straigth to finished');\r\n      colorFinishedPawns[color].appendChild(\r\n        RemoveChildFromAnElement(parentSquare)\r\n      );\r\n      CheckAndHandleWin(color);\r\n      console.log(\r\n        'we win straight from the board so we stop the previous ones'\r\n      );\r\n      return true;\r\n    } else {\r\n      console.log('win lane now');\r\n      console.log(steps);\r\n      console.log(colorWinLane[color]);\r\n      console.log(colorWinLane[color][steps]);\r\n      colorWinLane[color][steps].appendChild(\r\n        RemoveChildFromAnElement(parentSquare)\r\n      );\r\n    }\r\n    return;\r\n  }\r\n  console.log('we are not on lane');\r\n  // ! we need to kill pawns\r\n  if (pawnElement.parentElement) {\r\n    const movedPawn = RemoveChildFromAnElement(pawnElement.parentElement);\r\n    CheckAndKillEnemyPawns(nextIdx, color);\r\n    playableSquares[nextIdx].appendChild(movedPawn);\r\n  } else {\r\n    console.log('no parent');\r\n  }\r\n}\r\n// TODO: FIX IT SO WE HAVE A NICE FUNCTION THAT CHECKS FOR THE PARENT\r\nfunction SwitchToLane(currIdx: number, nextIdx: number, color: possibleColors) {\r\n  // * TODO: make it pretty maybe\r\n  console.log([\r\n    ['currIdx', currIdx],\r\n    ['nextIdx', nextIdx],\r\n  ]);\r\n  if (color === 'blue') {\r\n    let blueTempEnd = [36, 37, 38, 39, 0, 1];\r\n    if (nextIdx > 1 && nextIdx < 8 && blueTempEnd.includes(currIdx)) {\r\n      // ! TODO FIX THIS SHIT, THROWN 2 WHEN ON 37/38 I BELIEVE AND WON, FIX!!!!\r\n      // ? Might work now!\r\n      console.log('TEPTPEPTEPTPEP WE SHOULD SWITCH NOW~~');\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  if (\r\n    nextIdx > parseInt(colorEnd[color]) &&\r\n    currIdx <= parseInt(colorEnd[color])\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nfunction SpawnCallback(colorSpawn: HTMLElement, color: possibleColors) {\r\n  return function (e: Event) {\r\n    if (\r\n      pickPawn &&\r\n      diceThrow === 6 &&\r\n      colorSpawn.childElementCount > 0 &&\r\n      playerColor == color\r\n    ) {\r\n      const removedPawnFromSpawn = colorSpawn.removeChild(\r\n        colorSpawn.lastElementChild as Element\r\n      );\r\n      const startIndex: number = parseInt(colorStart[playerColor]);\r\n      removedPawnFromSpawn.addEventListener('click', PawnHandler(color));\r\n      CheckAndKillEnemyPawns(startIndex, color);\r\n      playableSquares[startIndex].appendChild(removedPawnFromSpawn);\r\n      TogglePawnAndDice();\r\n    } else {\r\n      console.log([\r\n        ['Spawn', colorSpawn],\r\n        ['diceThrow', diceThrow],\r\n        ['playerColor', playerColor],\r\n        'Unable to pick a pawn.',\r\n      ]);\r\n    }\r\n  };\r\n}\r\n\r\nfor (const color of colors) {\r\n  const colorSpawn: HTMLElement = colorPawnsSpawn[color];\r\n  colorSpawn.addEventListener('click', SpawnCallback(colorSpawn, color));\r\n}\r\nfunction CheckAndKillEnemyPawns(idx: number, color: possibleColors) {\r\n  console.log(\r\n    '--logging the next square nnd its child. its supposed to not have any? huh--'\r\n  );\r\n  console.log(playableSquares[idx].firstElementChild);\r\n  console.log(playableSquares[idx]);\r\n  console.log('---');\r\n  if (playableSquares[idx].firstElementChild) {\r\n    const nextIdxSquare = playableSquares[idx];\r\n    const enemyPawn = nextIdxSquare.firstElementChild;\r\n    console.log(['enemyPawn?', enemyPawn]);\r\n    if (enemyPawn instanceof HTMLElement && enemyPawn) {\r\n      if (\r\n        enemyPawn.dataset.pawn !== undefined &&\r\n        enemyPawn.dataset.pawn !== color\r\n      ) {\r\n        console.log('WE ENCOUNTER AN ENEMY, WE KILL THE PAWNS, PLACE OUR OWN.');\r\n        console.log(\r\n          `😒😒😒😒😒Enemy: ${enemyPawn} The Square ${nextIdxSquare}`\r\n        );\r\n        console.log('STACK TRACE');\r\n        console.trace();\r\n        const enemyPawnColor = enemyPawn.dataset.pawn as possibleColors;\r\n        const killedPawns = Array.from(nextIdxSquare.children).map((child) => {\r\n          console.log(child);\r\n          // We make sure to delete it's event listeneres by cloning it and replacing it\r\n          nextIdxSquare.replaceChild(child.cloneNode(true), child);\r\n          return RemoveChildFromAnElement(nextIdxSquare);\r\n        });\r\n        //HERE\r\n        colorPawnsSpawn[enemyPawnColor].append(...killedPawns);\r\n      }\r\n    } else {\r\n      console.log('its our pawn, do nofin');\r\n    }\r\n  } else {\r\n    console.log('no children, we can proceed');\r\n  }\r\n}\r\n// ! TODO FIX IT SO YOU CANT CLICK THE DICE\r\n// ! TODO FIX IT SO WHEN THROWN 6 6 6 YOU THROW UNTIL YOU DONT HIT 6\r\ndice.addEventListener('click', DiceClick);\r\nfunction DiceClick(this: HTMLButtonElement, e: Event) {\r\n  if (diceReady) {\r\n    diceThrow = Math.floor(Math.random() * 6) + 1; //! PLACE FOR THE CHANGE OF DICE THROW\r\n    // diceThrow = Math.floor(Math.random() * 6) + 1;\r\n    // diceThrow = 6;\r\n    if (diceThrow !== 6) {\r\n      this.style.setProperty('--color-show', colorOrder[playerColor]);\r\n    }\r\n    AppendBoardHistory(playerColor, diceThrow);\r\n    TurnOnDice(diceThrow);\r\n    TogglePawnAndDice();\r\n    if (\r\n      diceThrow !== 6 &&\r\n      colorPawnsSpawn[playerColor].childElementCount +\r\n        colorFinishedPawns[playerColor].childElementCount ===\r\n        4\r\n    ) {\r\n      gameInfo.classList.remove('game-info-out');\r\n      placePawn.style.setProperty('--player-top-pass', playerColor);\r\n      gameInfo.classList.add('game-info-in');\r\n      placePawn.focus();\r\n      placePawn.addEventListener('click', PassYourTurn);\r\n    }\r\n  } else {\r\n    console.log('YOU ARE NOT SUPPOSED TO THROW THE DICE YET');\r\n  }\r\n  this.focus();\r\n}\r\nfunction PassYourTurn(this: Element) {\r\n  this.removeEventListener('click', PassYourTurn);\r\n  gameInfo.classList.add('game-info-out');\r\n  gameInfo.classList.remove('game-info-in');\r\n  TogglePawnAndDice();\r\n  // dice.focus();\r\n  playerColor = colorOrder[playerColor];\r\n}\r\nfunction RemoveChildFromAnElement(parent: Element) {\r\n  return parent.removeChild(parent.firstElementChild as Element);\r\n}\r\n\r\n//document.addEventListener('keydown', (e) => console.log(e.target));\r\n\r\nfunction KillAllPawns() {\r\n  for (const color of colors) {\r\n    const spawnForColor = colorPawnsSpawn[color];\r\n    const pawnOfColor = Array.from(\r\n      document.querySelectorAll(`[data-pawn=${color}]`)\r\n    );\r\n    pawnOfColor.forEach((e) => {\r\n      e.parentElement?.removeChild(e);\r\n      RemoveMyListeners(e);\r\n    });\r\n    spawnForColor.append(...pawnOfColor);\r\n  }\r\n  ClearBoardHistory();\r\n  playerColor = initColor;\r\n  diceThrow = initDiceThrow;\r\n  diceReady = true;\r\n  pickPawn = false;\r\n  diceText.innerText = 'Ready';\r\n  dice.addEventListener('click', DiceClick);\r\n}\r\n"]}