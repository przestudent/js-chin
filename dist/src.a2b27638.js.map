{"version":3,"sources":["src/index.js"],"names":["colorOrder","red","blue","green","yellow","playerColor","moveCount","boardHistory","document","querySelector","dices","querySelectorAll","style","visibility","board","playableSquares","Array","from","sort","a","b","dataset","index","boardPlayArray","length","fill","colorWin","playerColorShow","colorWinLane","winred","winblue","winyellow","wingreen","colorLaneArray","colorEnd","colorStart","colorPawnsSpawn","diceThrow","roadToWin","addEventListener","HandleDice","Handle6","removedPawnFromSpawn","RemoveChildFromAnElement","appendChild","Math","floor","random","TurnOnDice","console","log","concat","childElementCount","AppendBoardHistory","includes","indexOf","indexNext","PlacePawn","currIndex","nextIndex","arguments","undefined","removedPawn","removeChild","firstChild","blueTempEnd","HandleWinLane","pawnColorToGoBackToSpawn","pawn","knockedPawn","parent","children","i","dicesRef","forEach","e","steps","HandleWin","classList","add","tableRow","createElement","innerHTML","insertBefore"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const colorOrder = {\n  red: \"blue\",\n  blue: \"green\",\n  green: \"yellow\",\n  yellow: \"red\",\n};\n\nlet playerColor = \"red\";\nlet moveCount = 0;\n\n// #region\n\nconst boardHistory = document.querySelector(\".board-history-table>tbody\");\nconst dices = document.querySelectorAll(\".dice-throw>i\");\ndices[0].style.visibility = \"visible\";\nconst board = document.querySelector(\".board\");\nconst playableSquares = Array.from(\n  document.querySelectorAll(\".square[data-index]\")\n).sort((a, b) => a.dataset.index - b.dataset.index);\nconst boardPlayArray = new Array(playableSquares.length).fill(\"\");\n\nconst colorWin = document.querySelector(\".black\");\n\nconst playerColorShow = document.querySelector(\".player\");\n//#endregion\nconst colorWinLane = {\n  red: Array.from(document.querySelectorAll(\"[data-winred]\")).sort(\n    (a, b) => a.dataset.winred - b.dataset.winred\n  ),\n  blue: Array.from(document.querySelectorAll(\"[data-winblue]\")).sort(\n    (a, b) => a.dataset.winblue - b.dataset.winblue\n  ),\n  yellow: Array.from(document.querySelectorAll(\"[data-winyellow]\")).sort(\n    (a, b) => a.dataset.winyellow - b.dataset.winyellow\n  ),\n  green: Array.from(document.querySelectorAll(\"[data-wingreen]\")).sort(\n    (a, b) => a.dataset.wingreen - b.dataset.wingreen\n  ),\n};\n\nconst colorLaneArray = {\n  red: new Array(4).fill(\"\"),\n  green: new Array(4).fill(\"\"),\n  yellow: new Array(4).fill(\"\"),\n  blue: new Array(4).fill(\"\"),\n};\nconst colorEnd = {\n  red: document.querySelector(\"[data-end=red]\").dataset.index,\n  blue: document.querySelector(\"[data-end=blue]\").dataset.index,\n  yellow: document.querySelector(\"[data-end=yellow]\").dataset.index,\n  green: document.querySelector(\"[data-end=green]\").dataset.index,\n};\nconst colorStart = {\n  red: document.querySelector(\".red-light\").dataset.index,\n  blue: document.querySelector(\".blue-light\").dataset.index,\n  yellow: document.querySelector(\".yellow-light\").dataset.index,\n  green: document.querySelector(\".green-light\").dataset.index,\n};\nconst colorPawnsSpawn = {\n  red: document.querySelector(\"#pawns-red\"),\n  blue: document.querySelector(\"#pawns-blue\"),\n  yellow: document.querySelector(\"#pawns-yellow\"),\n  green: document.querySelector(\"#pawns-green\"),\n};\n\nlet diceThrow = 0;\nconst roadToWin = 39;\n\ndocument.querySelector(\".Dice\").addEventListener(\"click\", HandleDice);\nfunction Handle6() {\n  const removedPawnFromSpawn = RemoveChildFromAnElement(\n    colorPawnsSpawn[playerColor]\n  );\n  playableSquares[colorStart[playerColor]].appendChild(removedPawnFromSpawn);\n  boardPlayArray[colorStart[playerColor]] = playerColor;\n\n  HandleDice();\n}\nfunction HandleDice() {\n  diceThrow = Math.floor(Math.random() * 6) + 1;\n  moveCount++;\n  TurnOnDice(diceThrow, dices);\n  //diceCount.innerText = diceThrow;\n  let index;\n  console.log(\n    `CHILDREN__${colorPawnsSpawn[playerColor].childElementCount}__DICE:${diceThrow}__color:${playerColor}`\n  );\n  AppendBoardHistory();\n  if (diceThrow == 6 && colorPawnsSpawn[playerColor].childElementCount > 0) {\n    Handle6();\n    return;\n  }\n  if (boardPlayArray.includes(playerColor)) {\n    index = boardPlayArray.indexOf(playerColor);\n    const indexNext = (index + diceThrow) % boardPlayArray.length;\n\n    PlacePawn(index, indexNext);\n  }\n  //playerColorShow.innerText = colorOrder[playerColor];\n  //playerColor = colorOrder[playerColor];\n}\nfunction PlacePawn(currIndex, nextIndex = currIndex) {\n  console.log(`${currIndex}    ->      ${nextIndex}`);\n  boardPlayArray[currIndex] = \"\";\n  const removedPawn = playableSquares[currIndex].removeChild(\n    playableSquares[currIndex].firstChild\n  );\n\n  if (playerColor === \"blue\") {\n    let blueTempEnd = [36, 37, 38, 39, 0, 1];\n    if (\n      nextIndex > colorStart[playerColor] &&\n      blueTempEnd.includes(currIndex)\n    ) {\n    }\n  }\n  console.log(nextIndex, colorEnd[playerColor]);\n  if (\n    nextIndex > colorEnd[playerColor] &&\n    currIndex < colorStart[playerColor]\n  ) {\n    console.log(\"winlane\");\n    HandleWinLane(currIndex, nextIndex, removedPawn);\n    return;\n  }\n  if (boardPlayArray[nextIndex] && boardPlayArray[nextIndex] !== playerColor) {\n    const pawnColorToGoBackToSpawn = boardPlayArray[nextIndex].dataset.pawn;\n    const knockedPawn = RemoveChildFromAnElement(playableSquares[nextIndex]);\n    colorPawnsSpawn[pawnColorToGoBackToSpawn].appendChild(knockedPawn);\n  }\n  boardPlayArray[nextIndex] = playerColor;\n  playableSquares[nextIndex].appendChild(removedPawn);\n}\n\nfunction RemoveChildFromAnElement(parent) {\n  return parent.removeChild(parent.children[0]);\n}\n\nfunction TurnOnDice(i, dicesRef) {\n  dicesRef.forEach((e) => {\n    e.style.visibility = \"hidden\";\n  });\n  dicesRef[i - 1].style.visibility = \"visible\";\n}\nfunction HandleWinLane(currIndex, nextIndex, removedPawn) {\n  const steps = nextIndex - colorEnd[playerColor];\n  boardPlayArray[currIndex] = \"\";\n  if (steps > 4) {\n    HandleWin();\n    return;\n  } else {\n    removedPawn.classList.add(\"win-lane\");\n    console.log(colorWinLane);\n    console.log(colorWinLane[playerColor]);\n    console.log(colorWinLane[playerColor][steps - 1]);\n    colorWinLane[playerColor][steps - 1].appendChild(removedPawn);\n    colorLaneArray[playerColor][steps - 1] = \"red\";\n  }\n}\nfunction HandleWin(removedPawn) {\n  colorWin.appendChild(removedPawn);\n}\nfunction AppendBoardHistory() {\n  const tableRow = document.createElement(\"tr\");\n  tableRow.innerHTML = `<td>${moveCount}</td><td style=\"--player-color:${playerColor}\">${playerColor}</td><td>${diceThrow}</td>`;\n  if (!boardHistory.children.length) {\n    boardHistory.appendChild(tableRow);\n  } else {\n    boardHistory.insertBefore(tableRow, boardHistory.children[0]);\n  }\n}\n"]}