{"version":3,"sources":["src/index.js"],"names":["colorOrder","red","blue","green","yellow","playerColor","moveCount","boardHistory","document","querySelector","dices","querySelectorAll","style","visibility","board","playableSquares","Array","from","sort","a","b","dataset","index","boardPlayArray","length","fill","redPawns","greenPawns","yellowPawns","bluePawns","redStart","blueStart","yellowStart","greenStart","greenWinLane","wingreen","bluenWinLane","winblue","redWinLane","winred","yellowWinLane","winyellow","redEnd","blueEnd","yellowEnd","greenEnd","redLaneArray","blueLaneArray","yellowLaneArray","greenLaneArray","colorLaneArray","playerColorShow","colorWinLane","colorEnd","colorStart","colorPawnsSpawn","diceThrow","addEventListener","HandleDice","Handle6","removedPawnFromSpawn","RemoveChildFromAnElement","appendChild","Math","floor","random","TurnOnDice","console","log","concat","childElementCount","AppendBoardHistory","includes","indexOf","indexNext","PlacePawn","innerText","currIndex","nextIndex","arguments","undefined","removedPawn","removeChild","firstChild","pawnColorToGoBackToSpawn","pawn","knockedPawn","parent","children","i","dicesRef","forEach","e","tableRow","createElement","innerHTML","parentNode","insertBefore"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const colorOrder = {\n  red: \"blue\",\n  blue: \"green\",\n  green: \"yellow\",\n  yellow: \"red\",\n};\n\nlet playerColor = \"red\";\nlet moveCount = 0;\n\n//#region\n\nconst boardHistory = document.querySelector(\".board-history-table>tbody\");\nconst dices = document.querySelectorAll(\".dice-throw>i\");\ndices[0].style.visibility = \"visible\";\nconst board = document.querySelector(\".board\");\nconst playableSquares = Array.from(\n  document.querySelectorAll(\".square[data-index]\")\n);\nplayableSquares.sort((a, b) => a.dataset.index - b.dataset.index);\nconst boardPlayArray = new Array(playableSquares.length).fill(\"\");\nconst redPawns = document.querySelector(\"#pawns-red\");\nconst greenPawns = document.querySelector(\"#pawns-green\");\nconst yellowPawns = document.querySelector(\"#pawns-yellow\");\nconst bluePawns = document.querySelector(\"#pawns-blue\");\n\nconst redStart = document.querySelector(\".red-light\").dataset.index;\nconst blueStart = document.querySelector(\".blue-light\").dataset.index;\nconst yellowStart = document.querySelector(\".yellow-light\").dataset.index;\nconst greenStart = document.querySelector(\".green-light\").dataset.index;\n\nconst greenWinLane = Array.from(\n  document.querySelectorAll(\"[data-wingreen]\")\n).sort((a, b) => a.dataset.wingreen - b.dataset.wingreen);\nconst bluenWinLane = Array.from(\n  document.querySelectorAll(\"[data-winblue]\")\n).sort((a, b) => a.dataset.winblue - b.dataset.winblue);\nconst redWinLane = Array.from(document.querySelectorAll(\"[data-winred]\")).sort(\n  (a, b) => a.dataset.winred - b.dataset.winred\n);\nconst yellowWinLane = Array.from(\n  document.querySelectorAll(\"[data-winyellow]\")\n).sort((a, b) => a.dataset.winyellow - b.dataset.winyellow);\n\nconst redEnd = document.querySelector(\"[data-end=red]\");\nconst blueEnd = document.querySelector(\"[data-end=blue]\");\nconst yellowEnd = document.querySelector(\"[data-end=yellow]\");\nconst greenEnd = document.querySelector(\"[data-end=green]\");\nconst redLaneArray = new Array(4).fill(\"\");\nconst blueLaneArray = new Array(4).fill(\"\");\nconst yellowLaneArray = new Array(4).fill(\"\");\nconst greenLaneArray = new Array(4).fill(\"\");\n\nconst colorLaneArray = {\n  red: redLaneArray,\n  blue: blueLaneArray,\n  yellow: yellowLaneArray,\n  green: greenLaneArray,\n};\n\nconst playerColorShow = document.querySelector(\".player\");\n//#endregion\nconst colorWinLane = {\n  red: redWinLane,\n  green: greenWinLane,\n  yellow: yellowWinLane,\n  blue: bluenWinLane,\n};\nconst colorEnd = {\n  red: redEnd,\n  blue: blueEnd,\n  yellow: yellowEnd,\n  green: greenEnd,\n};\nconst colorStart = {\n  red: redStart,\n  blue: blueStart,\n  yellow: yellowStart,\n  green: greenStart,\n};\nconst colorPawnsSpawn = {\n  red: redPawns,\n  blue: bluePawns,\n  yellow: yellowPawns,\n  green: greenPawns,\n};\nlet diceThrow = 0;\ndocument.querySelector(\".Dice\").addEventListener(\"click\", HandleDice);\nfunction Handle6() {\n  const removedPawnFromSpawn = RemoveChildFromAnElement(\n    colorPawnsSpawn[playerColor]\n  );\n  playableSquares[colorStart[playerColor]].appendChild(removedPawnFromSpawn);\n  boardPlayArray[colorStart[playerColor]] = playerColor;\n\n  HandleDice();\n}\nfunction HandleDice() {\n  diceThrow = Math.floor(Math.random() * 6) + 1;\n  moveCount++;\n  TurnOnDice(diceThrow, dices);\n  //diceCount.innerText = diceThrow;\n  let index;\n  console.log(\n    `CHILDREN__${colorPawnsSpawn[playerColor].childElementCount}__DICE:${diceThrow}__color:${playerColor}`\n  );\n  AppendBoardHistory();\n  if (diceThrow == 6 && colorPawnsSpawn[playerColor].childElementCount > 0) {\n    Handle6();\n    return;\n  }\n  if (boardPlayArray.includes(playerColor)) {\n    index = boardPlayArray.indexOf(playerColor);\n    const indexNext = (index + diceThrow) % boardPlayArray.length;\n\n    PlacePawn(index, indexNext);\n  }\n  playerColorShow.innerText = colorOrder[playerColor];\n  playerColor = colorOrder[playerColor];\n}\nfunction PlacePawn(currIndex, nextIndex = currIndex) {\n  console.log(`${currIndex}    ->      ${nextIndex}`);\n  boardPlayArray[currIndex] = \"\";\n  const removedPawn = playableSquares[currIndex].removeChild(\n    playableSquares[currIndex].firstChild\n  );\n  if (boardPlayArray[nextIndex] && boardPlayArray[nextIndex] !== playerColor) {\n    const pawnColorToGoBackToSpawn = boardPlayArray[nextIndex].dataset.pawn;\n    const knockedPawn = RemoveChildFromAnElement(playableSquares[nextIndex]);\n    colorPawnsSpawn[pawnColorToGoBackToSpawn].appendChild(knockedPawn);\n  }\n  boardPlayArray[nextIndex] = playerColor;\n  playableSquares[nextIndex].appendChild(removedPawn);\n}\n\nfunction RemoveChildFromAnElement(parent) {\n  return parent.removeChild(parent.children[0]);\n}\nfunction TurnOnDice(i, dicesRef) {\n  dicesRef.forEach((e) => {\n    e.style.visibility = \"hidden\";\n  });\n  dicesRef[i - 1].style.visibility = \"visible\";\n}\n\n// function FLIP(firstRECT, secondRECT) {\n//   const rect1 = firstRECT.getBoundingClientRect();\n//   const rect2 = secondRECT.getBoundingClientRect();\n//   const [dx, dy] = [rect1.left - rect2.left, rect1.top - rect2.top];\n//   firstRECT.dataset.filpping = true;\n//   firstRECT.style.setProperty(\"--dx\", dx);\n//   firstRECT.style.setProperty(\"--dy\", dy);\n//   requestAnimationFrame(() => {\n//     console.log(firstRECT);\n//     requestAnimationFrame(() => (firstRECT.dataset.flip = \"play\"));\n//   });\n// }\nfunction AppendBoardHistory() {\n  const tableRow = document.createElement(\"tr\");\n  tableRow.innerHTML = `<td>${moveCount}</td><td style=\"--player-color:${playerColor}\">${playerColor}</td><td>${diceThrow}</td>`;\n  console.log(!boardHistory.children.length);\n  if (!boardHistory.children.length) {\n    boardHistory.appendChild(tableRow);\n  } else {\n    console.log(boardHistory.children[0]);\n    console.log(boardHistory.children[0].parentNode);\n    boardHistory.insertBefore(tableRow, boardHistory.children[0]);\n  }\n}\n"]}